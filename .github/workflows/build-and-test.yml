name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: paschendale/n8n-geospatial
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=sha-
            type=raw,value=test,enable={{is_default_branch}}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: paschendale/n8n-geospatial:test
          cache-from: |
            type=registry,ref=paschendale/n8n-geospatial:buildcache
            type=gha
          cache-to: |
            type=gha,mode=max
            type=registry,ref=paschendale/n8n-geospatial:buildcache,mode=max

      - name: Start container for testing
        run: |
          docker run -d --name n8n-test -p 5678:5678 \
            -e N8N_ENCRYPTION_KEY=test-key \
            paschendale/n8n-geospatial:test
          sleep 30  # Wait for n8n to start

      - name: Test QGIS accessibility
        run: |
          docker exec n8n-test qgis --version
          docker exec n8n-test python3 -c "import qgis.core; print('QGIS Python bindings working')"

      - name: Test n8n accessibility
        run: |
          curl -f http://localhost:5678 || exit 1
          echo "n8n is accessible at http://localhost:5678"

      - name: Test GDAL accessibility
        run: |
          docker exec n8n-test gdalinfo --version
          docker exec n8n-test python3 -c "from osgeo import gdal; print('GDAL Python bindings working')"

      - name: Test PDAL accessibility
        run: |
          docker exec n8n-test pdal --version
          # This is not available, but isnt needed for now. If the need arises, we can install PDAL via pip
          # docker exec n8n-test python3 -c "import pdal; print('PDAL Python bindings working')"

      - name: Cleanup
        if: always()
        run: |
          docker stop n8n-test || true
          docker rm n8n-test || true

      - name: Push to registry (on main/master)
        if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && success()
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=registry,ref=paschendale/n8n-geospatial:buildcache
            type=gha
          cache-to: |
            type=gha,mode=max
            type=registry,ref=paschendale/n8n-geospatial:buildcache,mode=max
